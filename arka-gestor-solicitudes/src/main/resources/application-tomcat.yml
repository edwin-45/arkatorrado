# üê± CONFIGURACI√ìN TOMCAT AMAZON LINUX
# Arca Gestor Solicitudes - application-tomcat.yml

server:
  # External access para AWS EC2
  address: 0.0.0.0
  port: 8082
  
  # Configuraci√≥n Tomcat espec√≠fica
  tomcat:
    accept-count: 100
    max-connections: 10000
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-http-form-post-size: 2MB
    
  # Compression para mejor performance
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  application:
    name: arca-gestor-solicitudes
    
  # Solo profile AWS necesario
  profiles:
    active: aws
    
  # Config client
  config:
    import: "optional:configserver:http://${AWS_PUBLIC_IP:18.117.120.169}:8888"
    
  # Database configuration para Amazon Linux
  datasource:
    url: jdbc:mysql://${DB_HOST:172.31.48.25}:${DB_PORT:3306}/${DB_NAME:arkadatabase}
    username: ${DB_USERNAME:arkauser}
    password: ${DB_PASSWORD:arkapass2024}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        
# Eureka Client Configuration
eureka:
  instance:
    hostname: ${AWS_PUBLIC_IP:18.117.120.169}
    prefer-ip-address: true
    ip-address: ${AWS_PUBLIC_IP:18.117.120.169}
    instance-id: ${spring.application.name}:${AWS_PUBLIC_IP:18.117.120.169}:${server.port}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    service-url:
      defaultZone: http://${AWS_PUBLIC_IP:18.117.120.169}:8761/eureka/
    registry-fetch-interval-seconds: 5
    
# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  server:
    address: 0.0.0.0
    port: 8082
    
# JWT Security Configuration
jwt:
  secret: ${JWT_SECRET:arkaSecretKey2024ForProductionUseChangeThis}
  expiration: 86400000  # 24 hours
  
# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  s3:
    bucket: ${AWS_S3_BUCKET:arka-documents-prod}
    
# Logging para Tomcat
logging:
  level:
    com.arka: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    com.netflix.eureka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: /opt/tomcat-instances/logs/arca-gestor-solicitudes.log
    max-size: 10MB
    max-history: 30